# see everything in console!
debug=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG

# These lines for schema creation based on model, via NHibernate
#spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create

# save the auto-generated schema to separate drop & create SQL files
spring.jpa.properties.jakarta.persistence.schema-generation.scripts.action=drop-and-create
spring.jpa.properties.hibernate.hbm2ddl.schema-generation.script.append=false
spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-target=./generatedSchema/create-schema.sql
spring.jpa.properties.jakarta.persistence.schema-generation.scripts.drop-target=./generatedSchema/drop-schema.sql

# These lines for schema creation based on schema-postgresql.sql
# https://docs.spring.io/spring-boot/docs/3.0.0/reference/html/howto.html#howto.data-initialization.using-basic-sql-scripts
#spring.sql.init.platform=postgresql
#spring.sql.init.mode=always # or never, embedded

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://localhost:5432/accessingdatajpa
spring.datasource.username=accessingdatajpauser
spring.datasource.password=password

